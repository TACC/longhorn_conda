local help_message = [[
Anaconda python environment containing ${ENV}, which contains:

  - TensorFlow
  - PyTorch
  - and more

You can modify this environment as follows:

  - Extend this environment locally

      $ pip install --user [package]

  - Clone and modify this environment

      $ conda create --name myclone --clone py${PYV}_${ENV}
      $ conda install --name myclone new_package

  - Create a new one of your own

      $ conda create -n [environment_name] [package]

https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html

https://developer.ibm.com/linuxonpower/2018/08/24/distributed-deep-learning-horovod-powerai-ddl/
]]

help(help_message,"\n")

whatis("Name: python${PYV}")
whatis("Version: ${ENV}")
whatis("Category: python conda powerai ${KEY}")
whatis("Keywords: python conda powerai ${KEY}")
whatis("Description: ${ENV} anaconda python environment")
whatis("URL: https://docs.conda.io/projects/conda/en/latest/user-guide/getting-started.html")

local conda_dir = "${CONDA_DIR}"

setenv("IBM_POWERAI_LICENSE_ACCEPT","yes")
setenv("CONDA_ENVS_PATH", os.getenv("SCRATCH") .. "/conda_envs:" .. conda_dir .. "/envs")

execute{cmd="source " .. conda_dir .. "/etc/profile.d/conda.sh; conda activate py${PYV}_${ENV}", modeA={"load"}}
execute{cmd="for i in $(seq ${CONDA_SHLVL:=0}); do conda deactivate; done; pre=" .. conda_dir .. "; \
	export LD_LIBRARY_PATH=$(echo ${LD_LIBRARY_PATH} | tr ':' '\\n' | grep . | grep -v $pre | tr '\\n' ':' | sed 's/:$//'); \
	export PATH=$(echo ${PATH} | tr ':' '\\n' | grep . | grep -v $pre | tr '\\n' ':' | sed 's/:$//'); \
	unset $(env | grep -o \"[^=]*CONDA[^=]*\");", modeA={"unload"}}

family("python")
